mutate_at(vars(conflict_score,
mdp_adjust),
~ scale(.x)) %>%
mutate_at(vars(conflict_score,
mdp_adjust),
~ range_wna(.x)) %>%
mutate(priority_score = (conflict_score + mdp_adjust) / 2) %>%
unnest() %>%
arrange(admin3_pcode),
by = "admin3_pcode"
) %>%
do.call(data.frame, .) %>%
as_tibble()
glimpse(pin)
pin <- read_csv("./data/fs_pin.csv")
glimpse(pin)
pin_2022 <- pin_2022 %>%
select(township,
admin3 = township_pcode,
pin_idp = internally_displaced_people_idp_pi_n,
pin_returnees = id_ps_returnees_resettled_locally_integrated_pi_n,
pin_stateless = non_displaced_stateless_people_in_rakhine_pi_n,
pin_other = mostly_vulnerable_crisis_affected_people_pi_n,
pin_total = total_pi_n,
pin_female_pc = female_percent_10,
pin_children_pc = children_age_18_percent_11,
pin_adults_pc = adults_age_18_60_percent_12,
pin_elderly_pc = elderly_age_60_percent_13,
pin_pwd_pc = people_with_disabilities_percent,
target_idp = internally_displaced_people_idp_target,
target_returnees = id_ps_returnees_resettled_locally_integrated_target,
target_stateless = non_displaced_stateless_people_in_rakhine_target,
target_other = mostly_vulnerable_crisis_affected_people_target,
target_total = total_target,
target_female_pc = female_percent_10,
target_children_pc = children_age_18_percent_22,
target_adults_pc = adults_age_18_60_percent_23,
target_elderly_pc = elderly_age_60_percent_24,
so1_target,
so2_target,
so3_target) %>%
mutate(target_pwd_pc = pin_pwd_pc) %>%
mutate_at(vars(matches("_pc")),
~ round(.x / 100, digits = 2)) %>%
rename(admin3_pcode = admin3) %>%
arrange(admin3_pcode) %>%
replace(is.na(.), 0) %>%
right_join(
pin %>%
select(state,
admin1_pcode,
admin3_pcode,
conflict_score,
mdp_adjust) %>%
mutate_at(vars(conflict_score,
mdp_adjust),
~ scale(.x)) %>%
mutate_at(vars(conflict_score,
mdp_adjust),
~ range_wna(.x)) %>%
mutate(priority_score = (conflict_score + mdp_adjust) / 2) %>%
unnest() %>%
arrange(admin3_pcode),
by = "admin3_pcode"
) %>%
do.call(data.frame, .) %>%
as_tibble()
pin_2022 %>%
group_by(state) %>%
summarise(so1_target = sum(so1_target),
so2_target = sum(so2_target),
so3_target = sum(so3_target),
pin_total = sum(pin_total))
fsc %>%
filter(!is.na(total_value_usd)) %>%
group_by(strat_obj) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd))
fsc %>%
filter(!is.na(total_value_usd)) %>%
group_by(strat_obj) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd)) %>%
mutate(pc = total_value_usd / beneficiaries)
pin_2022 %>%
group_by(state) %>%
summarise_at("pin_total", sum)
baseline_pin <- read_csv("./data/baseline_pin.csv")
baseline_pin
baseline_pin <- read_csv("./data/baseline_pin.csv") %>% clean_names()
baseline_pin %>% glimpse()
group_by(state) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"))
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
group_by(state) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"))
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
group_by(state) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"),
sum)
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
group_by(state) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"),
sum(., na.rm = TRUE))
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
group_by(state) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"),
~ sum(., na.rm = TRUE))
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"),
~ sum(., na.rm = TRUE))
baseline_pin %>%
rename(idps = id_ps,
resettled = idp_returnees_resettled_locally_integrated_sep_2021,
stateless = non_displaced_stateless_people_in_rakhine_2021_hno,
vulnerable = number_of_most_vulnerable_crisis_affected_people_baseline) %>%
summarise_at(c("idps",
"resettled",
"stateless",
"vulnerable"),
~ sum(., na.rm = TRUE))%>%
mutate(other = resettled + stateless + vulnerable)
pin_2022 %>%
group_by(state) %>%
summarise(so1_target = sum(so1_target),
so2_target = sum(so2_target),
so3_target = sum(so3_target))
pin_2022 %>%
group_by(state) %>%
summarise(so1_target = sum(so1_target)) %>%
pivot_wider(names_from = state, values_from = so1_target) %>%
view()
pin_2022 %>%
group_by(state) %>%
summarise(target = sum(so2_target)) %>%
view()
pin_2022 %>%
group_by(state) %>%
summarise(target = sum(so2_target))
pin_2022 %>%
group_by(state) %>%
summarise(target = sum(so3_target))
pin_2022 %>%
summarise_at(c("target_idp",
"target_returnees",
"target_stateless",
"target_other"),
sum)
pin_2022 %>%
summarise_at(c("target_idp",
"target_returnees",
"target_stateless",
"target_other"),
~ sum(na.rm = TRUE))
pin_2022 %>%
summarise_at(c("target_idp",
"target_returnees",
"target_stateless",
"target_other"),
~ sum(., na.rm = TRUE))
pin %>% count(target_returnees)
pin_2022 %>% count(target_returnees)
pin_2022 <- read_csv("./data/pin_2022_for_input.csv") %>%
clean_names()
pin_2022 %>% glimpse()
pin_2022 <- pin_2022 %>%
select(township,
admin3 = township_pcode,
pin_idp = internally_displaced_people_idp_pi_n,
pin_returnees = id_ps_returnees_resettled_locally_integrated_pi_n,
pin_stateless = non_displaced_stateless_people_in_rakhine_pi_n,
pin_other = mostly_vulnerable_crisis_affected_people_pi_n,
pin_total = total_pi_n,
pin_female_pc = female_percent_10,
pin_children_pc = children_age_18_percent_11,
pin_adults_pc = adults_age_18_60_percent_12,
pin_elderly_pc = elderly_age_60_percent_13,
pin_pwd_pc = people_with_disabilities_percent,
target_idp = internally_displaced_people_idp_target,
target_returnees = id_ps_returnees_resettled_locally_integrated_target,
target_stateless = non_displaced_stateless_people_in_rakhine_target,
target_other = mostly_vulnerable_crisis_affected_people_target,
target_total = total_target,
target_female_pc = female_percent_10,
target_children_pc = children_age_18_percent_22,
target_adults_pc = adults_age_18_60_percent_23,
target_elderly_pc = elderly_age_60_percent_24,
so1_target:other_vulnerable_so3) %>%
mutate(target_pwd_pc = pin_pwd_pc) %>%
mutate_at(vars(matches("_pc")),
~ round(.x / 100, digits = 2)) %>%
rename(admin3_pcode = admin3) %>%
arrange(admin3_pcode) %>%
replace(is.na(.), 0) %>%
right_join(
pin %>%
select(state,
admin1_pcode,
admin3_pcode,
conflict_score,
mdp_adjust) %>%
mutate_at(vars(conflict_score,
mdp_adjust),
~ scale(.x)) %>%
mutate_at(vars(conflict_score,
mdp_adjust),
~ range_wna(.x)) %>%
mutate(priority_score = (conflict_score + mdp_adjust) / 2) %>%
unnest() %>%
arrange(admin3_pcode),
by = "admin3_pcode"
) %>%
do.call(data.frame, .) %>%
as_tibble()
pin_2022 %>%
select(matches("so1|so2|so3"))
pin_2022 %>%
select(matches("so1|so2|so3")) %>%
select(-contains("target"))
pin_2022 %>%
select(matches("so1|so2|so3")) %>%
select(-contains("target")) %>%
summarise_all(sum)
pin_2022 %>%
select(matches("so1|so2|so3")) %>%
select(-contains("target")) %>%
summarise_all(sum) %>% pivot_longer()
pin_2022 %>%
select(matches("so1|so2|so3")) %>%
select(-contains("target")) %>%
summarise_all(sum) %>% pivot_longer(cols = everything())
pin_2022 %>%
select(matches("so2|so3")) %>%
select(-contains("target")) %>%
summarise_all(sum) %>%
pivot_longer(cols = everything())
fsc %>%
distinct(implementing_partner)
fsc %>%
distinct(implementing_partner) %>%
write_csv("thing.csv")
fsc %>% glimpse()
fsc %>% count(fsc_objectives,
hrp_indicator)
fsc %>% count(fsc_objectives,
hrp_indicator) %>%
print()
fsc %>% count(fsc_objectives,
hrp_indicator) %>%
print()
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
library(flextable)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc <- read_csv("./data/fsc.csv") %>%
mutate(july = ifelse(month_of_implementation == "July 2022",
"july", "jan_to_jun"))
fsc_2021 <- read_csv("./data/fsc_2021.csv")
pin <- read_csv("./data/fs_pin.csv")
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
southeast <- c("Kayin",
"Kayah",
"Mon",
"Tanintharyi",
"Shan (South)")
fsc %>% group_by(strat_obj, activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd, na.rm = TRUE))
fsc %>% group_by(activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd, na.rm = TRUE))
fsc %>% group_by(activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd, na.rm = TRUE)) %>%
mutate(per_ben = total_value_usd / beneficiaries)
fsc %>% group_by(activity = activity_red) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd, na.rm = TRUE)) %>%
mutate(per_ben_usd = total_value_usd / beneficiaries) %>%
write_csv("./data/activity_costs_2022.csv")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
library(flextable)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc <- read_csv("./data/fsc.csv") %>%
mutate(july = ifelse(month_of_implementation == "July 2022",
"july", "jan_to_jun"))
fsc_2021 <- read_csv("./data/fsc_2021.csv")
pin <- read_csv("./data/fs_pin.csv")
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
southeast <- c("Kayin",
"Kayah",
"Mon",
"Tanintharyi",
"Shan (South)")
fsc %>% group_by(activity) %>%
summarise(beneficiaries = sum(beneficiaries),
total_value_usd = sum(total_value_usd, na.rm = TRUE)) %>%
mutate(per_ben_usd = total_value_usd / beneficiaries) %>%
write_csv("./data/activity_costs_2022.csv")
