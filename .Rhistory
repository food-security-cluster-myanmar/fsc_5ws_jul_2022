"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
mutate(year = as.character(year(date))) %>%
group_by(year, date) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.C option B") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit")
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
group_by(state, township, admin3_pcode, location) %>%
slice(which.max(beneficiaries)) %>%
group_by(date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
# write_csv("./data/mm21c_2021_2022.csv")
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.c option A") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_a.png")
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
group_by(state, township, admin3_pcode, location) %>%
slice(which.max(beneficiaries)) %>%
group_by(date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
# write_csv("./data/mm21c_2021_2022.csv")
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.c option A") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "option_a.png")
# Option B
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries,
unique_beneficiaries) %>%
mutate(new_beneficiaries = ifelse(
unique_beneficiaries == "Yes",
beneficiaries,
0)) %>%
select(-beneficiaries, -unique_beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
new_beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
mutate(year = as.character(year(date))) %>%
group_by(year, date) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.C option B") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_b.png")
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
group_by(state, township, admin3_pcode, location) %>%
slice(which.max(beneficiaries)) %>%
group_by(date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
# write_csv("./data/mm21c_2021_2022.csv")
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.c option A") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = ".plots/option_a.png")
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
group_by(state, township, admin3_pcode, location) %>%
slice(which.max(beneficiaries)) %>%
group_by(date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
# write_csv("./data/mm21c_2021_2022.csv")
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.c option A") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_a.png")
# Option B
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries,
unique_beneficiaries) %>%
mutate(new_beneficiaries = ifelse(
unique_beneficiaries == "Yes",
beneficiaries,
0)) %>%
select(-beneficiaries, -unique_beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
new_beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
mutate(year = as.character(year(date))) %>%
group_by(year, date) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.C option B") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_b.png")
# Option B
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries,
unique_beneficiaries) %>%
mutate(new_beneficiaries = ifelse(
unique_beneficiaries == "Yes",
beneficiaries,
0)) %>%
select(-beneficiaries, -unique_beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
new_beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
mutate(year = as.character(year(date))) %>%
group_by(year, date) %>%
summarise(beneficiaries = sum(new_beneficiaries)) %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.C option B") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_b.png")
# Option B
fsc_2021 %>%
select(date,
reporting_organization = report_org_code,
implementing_partner = org_code,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
beneficiaries,
unique_beneficiaries) %>%
mutate(new_beneficiaries = ifelse(
unique_beneficiaries == "Yes",
beneficiaries,
0)) %>%
select(-beneficiaries, -unique_beneficiaries) %>%
rbind(
fsc %>%
select(date,
reporting_organization,
implementing_partner,
state,
township,
location,
admin3_pcode,
admin4_pcode,
activity_red,
delivery_modality,
new_beneficiaries)) %>%
filter(delivery_modality %in% c("In-kind",
"Service delivery/support",
"Voucher",
"Hybrid (In-kind & CBT/CVA)",
"Hybrid (In-kind & Cash)")) %>%
filter(activity_red %in% c("food distribution",
"food_cash for work_assets",
"HEB and fortfied rice")) %>%
mutate(year = as.character(year(date))) %>%
group_by(year, date) %>%
summarise(beneficiaries = sum(new_beneficiaries),
.groups = "drop") %>%
arrange(date) %>%
mutate(beneficiaries = cumsum(beneficiaries)) %>%
flextable() %>%
set_caption("Number of persons reached per month MM-2.1.C option B") %>%
theme_booktabs() %>%
set_table_properties(layout = "autofit") %>%
save_as_image(path = "./plots/option_b.png")
knitr::opts_chunk$set(echo = FALSE, fig.width=9, message = FALSE, warning=FALSE)
library(tidyverse)
library(readxl)
library(lubridate)
library(stringi)
library(pander)
library(janitor)
library(fuzzyjoin)
library(scales)
library(magrittr)
library(sf)
library(kableExtra)
library(viridis)
library(skimr)
library(plotly)
library(patchwork)
library(broom)
library(DT)
library(here)
library(tidytext)
library(ggforce)
library(flextable)
theme_set(theme_light())
# disabling scientific notation
options(scipen = 100)
# pander tables all in one row
panderOptions('table.split.table', Inf)
# pander thousands separator
panderOptions("big.mark", ",")
# replace
opts <- options(knitr.kable.NA = "")
`%out%` <- Negate(`%in%`)
# function for transposing df
transpose_df <- function(df) {
t_df <- data.table::transpose(df)
colnames(t_df) <- rownames(df)
rownames(t_df) <- colnames(df)
t_df <- t_df %>%
tibble::rownames_to_column(.data = .) %>%
tibble::as_tibble(.)
return(t_df)
}
# function beneficiary summaries
sum_ben <- function(df, column_var){
column_var <- enquo(column_var)
df %>%
group_by(!!column_var) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(beneficiaries))
}
# function beneficiary summaries, 2 grouped variables
sum_ben2 <- function(df, column_var1, column_var2){
column_var1 <- enquo(column_var1)
column_var2 <- enquo(column_var2)
df %>%
group_by(!!column_var1, !!column_var2) %>% # must add bang-bang
summarise(beneficiaries = sum(new_beneficiaries, na.rm = TRUE),
.groups = "drop")
}
# scaling functions
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
range_wna <- function(x){(x-min(x, na.rm = TRUE))/(max(x, na.rm = TRUE)-min(x, na.rm = TRUE))}
#mode function
mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
fsc <- read_csv("./data/fsc.csv") %>%
mutate(july = ifelse(month_of_implementation == "July 2022",
"july", "jan_to_jun"))
fsc_2021 <- read_csv("./data/fsc_2021.csv")
pin <- read_csv("./data/fs_pin.csv")
hd_list <- fsc %>%
group_by(humanitarian_or_development, activity_red) %>%
mutate(hd = ifelse(humanitarian_or_development == "Humanitarian" |
activity_red == "food distribution",
"Humanitarian",
"Development")) %>%
mutate(humanitarian_or_development =
ifelse(activity_red == "multi-purpose cash transfer" &
humanitarian_or_development == "Development",
"Humanitarian", humanitarian_or_development)
) %>%
group_by(hd) %>%
summarise_at("beneficiaries", sum) %>%
mutate(pc = round(beneficiaries / sum(beneficiaries) * 100, digits = 2))
# shapefiles
pcode3_shape <- st_read("./mmr_polbnda_adm3_mimu_250k/mmr_polbnda_adm3_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE,
township = TS,
admin3_pcode = TS_PCODE) %>%
mutate(admin3_pcode = ifelse(str_detect(township, "Hlaingtharya"), "MMR013008", admin3_pcode))
pcode1_shape <- st_read("./mmr_polbnda2_adm1_mimu_250k/mmr_polbnda2_adm1_mimu_250k.shp", quiet = TRUE) %>%
rename(state = ST,
admin1_pcode = ST_PCODE) %>% st_as_sf()
fsc %>% filter(state == "Chin") %>% count(township)
fsc %>% filter(townhip == "Thantlang") %>%
group_by(activity_red, implementing_partner) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>% filter(township == "Thantlang") %>%
group_by(activity_red, implementing_partner) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>% filter(str_detect(location, "Pan Hkawng"))
fsc %>% filter(township == "Shwegu")
fsc %>% filter(township == "Shwegu") %>%
group_by(location) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>% filter(township == "Shwegu") %>%
group_by(implementing_partner) %>%
summarise(beneficiaries = sum(new_beneficiaries))
fsc %>% filter(reporting_organization == "org_5636")
fsc %>% filter(implementing_partner == "org_5636")
